import { Outlet, Link, useLocation } from 'react-router-dom';
import { useState, useEffect } from 'react';
import AIAssistant from '../components/AIAssistant';
import { Bot, Calendar, Settings, Workflow, StickyNote, CheckSquare, Users, Building, Handshake, LayoutDashboard, ChevronLeft, ChevronRight } from 'lucide-react';

const navItems = [
    { to: '/', icon: LayoutDashboard, label: 'Dashboard' },
    { to: '/contacts', icon: Users, label: 'Contacts' },
    { to: '/accounts', icon: Building, label: 'Comptes' },
    { to: '/opportunities', icon: Handshake, label: 'Opportunités' },
    { to: '/tasks', icon: CheckSquare, label: 'Tâches' },
    { to: '/calendar', icon: Calendar, label: 'Calendrier' },
    { to: '/notes', icon: StickyNote, label: 'Notes' },
    { to: '/workflows', icon: Workflow, label: 'Workflows' },
    { to: '/settings', icon: Settings, label: 'Paramètres' },
];

export default function MainLayout() {
    const [isAIAssistantOpen, setIsAIAssistantOpen] = useState(false);
    const [isSidebarCollapsed, setSidebarCollapsed] = useState(false);
    const location = useLocation();

    return (
        <div className="flex h-screen bg-gray-100 dark:bg-gray-900">
            <aside className={`bg-white dark:bg-gray-800 shadow-md flex flex-col transition-all duration-300 ${isSidebarCollapsed ? 'w-20' : 'w-64'}`}>
                <div className="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
                    {!isSidebarCollapsed && <div className="text-2xl font-bold text-gray-800 dark:text-white">Noé CRM</div>}
                     <button onClick={() => setSidebarCollapsed(!isSidebarCollapsed)} className="p-1 rounded text-gray-500 hover:bg-gray-200 dark:hover:bg-gray-700">
                        {isSidebarCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}
                    </button>
                </div>
                <nav className="flex-1 p-2 mt-4 space-y-1">
                    {navItems.map(item => (
                         <Link key={item.to} to={item.to} title={item.label} className={`flex items-center gap-3 p-2 rounded hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${location.pathname === item.to ? 'bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300' : ''} ${isSidebarCollapsed ? 'justify-center' : ''}`}>
                            <item.icon size={20} />
                            {!isSidebarCollapsed && <span>{item.label}</span>}
                        </Link>
                    ))}
                </nav>
                <div className="mt-auto border-t border-gray-200 dark:border-gray-700">
                    <button onClick={() => setIsAIAssistantOpen(true)} className={`w-full flex items-center gap-3 p-4 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors ${isSidebarCollapsed ? 'justify-center' : ''}`}>
                        <Bot className="h-5 w-5 text-purple-500" />
                        {!isSidebarCollapsed && <span className="font-medium">Assistant IA</span>}
                    </button>
                </div>
            </aside>
            <div className="flex flex-col flex-1 overflow-hidden">
                <header className="bg-white dark:bg-gray-800 shadow-sm p-4">
                    <div className="flex justify-between items-center">
                        <h1 className="text-xl font-semibold text-gray-700 dark:text-gray-200">Application</h1>
                        <div className="text-gray-800 dark:text-gray-200">John Doe</div>
                    </div>
                </header>
                <main className="flex-1 overflow-y-auto p-8 bg-gray-50 dark:bg-gray-950">
                    <Outlet />
                </main>
            </div>
            <AIAssistant isOpen={isAIAssistantOpen} onClose={() => setIsAIAssistantOpen(false)} />
        </div>
    );
}