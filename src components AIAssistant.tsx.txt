import { AnimatePresence, motion } from 'framer-motion';
import { mockAiRecommendations, mockAiChatHistory } from '../data/mock_data';
import type { FC } from 'react';
import { Bot, CalendarPlus, FileText, Phone, Send, Sparkles, X } from 'lucide-react';

interface AIAssistantProps {
  isOpen: boolean;
  onClose: () => void;
}

const iconMap: { [key: string]: JSX.Element } = {
  phone: <Phone className="h-5 w-5 text-purple-600 dark:text-purple-400" />,
  'calendar-plus': <CalendarPlus className="h-5 w-5 text-purple-600 dark:text-purple-400" />,
  'file-text': <FileText className="h-5 w-5 text-purple-600 dark:text-purple-400" />,
};

const AIAssistant: FC<AIAssistantProps> = ({ isOpen, onClose }) => {
  return (
    <AnimatePresence>
      {isOpen && (
        <>
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={onClose}
            className="fixed inset-0 bg-black/60 z-40"
            aria-hidden="true"
          />
          <motion.div
            initial={{ x: '100%' }}
            animate={{ x: 0 }}
            exit={{ x: '100%' }}
            transition={{ type: 'spring', stiffness: 300, damping: 30 }}
            className="fixed top-0 right-0 h-full w-full max-w-lg bg-gray-50 dark:bg-gray-800 shadow-2xl z-50 flex flex-col"
            role="dialog"
            aria-modal="true"
            aria-labelledby="ai-assistant-title"
          >
            <header className="flex-shrink-0 flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
              <div className="flex items-center gap-3">
                <Sparkles className="h-6 w-6 text-purple-500" />
                <h2 id="ai-assistant-title" className="text-lg font-semibold text-gray-800 dark:text-white">Assistant IA</h2>
              </div>
              <button onClick={onClose} className="p-1 rounded-full text-gray-500 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 hover:text-gray-800 dark:hover:text-gray-100 transition-colors">
                <span className="sr-only">Fermer</span>
                <X className="h-5 w-5" />
              </button>
            </header>

            <main className="flex-1 overflow-y-auto p-6 space-y-8">
              <section aria-labelledby="recommendations-title">
                <h3 id="recommendations-title" className="text-md font-semibold text-gray-700 dark:text-gray-200 mb-4">Recommandations pour vous</h3>
                <div className="space-y-3">
                  {mockAiRecommendations.map(rec => (
                    <div key={rec.id} className="p-3 bg-white dark:bg-gray-900/50 rounded-lg flex items-center space-x-4 border border-gray-200 dark:border-gray-700">
                      <div className="flex-shrink-0 h-10 w-10 rounded-full bg-purple-100 dark:bg-purple-900/50 flex items-center justify-center">
                         {iconMap[rec.icon]}
                      </div>
                      <div className="flex-1">
                        <p className="font-semibold text-sm text-gray-800 dark:text-gray-100">{rec.title}</p>
                        <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">{rec.description}</p>
                      </div>
                      <button className="flex-shrink-0 text-sm text-purple-600 dark:text-purple-400 font-semibold hover:underline whitespace-nowrap px-3 py-1 rounded-md hover:bg-purple-50 dark:hover:bg-purple-900/40">
                        {rec.actionText}
                      </button>
                    </div>
                  ))}
                </div>
              </section>

              <section aria-labelledby="chat-history-title" className="space-y-4">
                 <h3 id="chat-history-title" className="text-md font-semibold text-gray-700 dark:text-gray-200 sr-only">Conversation</h3>
                 {mockAiChatHistory.map(msg => (
                    <div key={msg.id} className={`flex items-end gap-2.5 ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                        {msg.sender === 'ai' && (
                            <div className="flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center border border-gray-300 dark:border-gray-600">
                                <Bot className="h-5 w-5 text-gray-600 dark:text-gray-300" />
                            </div>
                        )}
                        <div className={`max-w-xs md:max-w-md p-3 rounded-2xl ${msg.sender === 'user' ? 'bg-purple-600 text-white rounded-br-lg' : 'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-bl-lg border border-gray-200 dark:border-gray-600'}`}>
                            <p className="text-sm whitespace-pre-wrap">{msg.text}</p>
                        </div>
                    </div>
                ))}
              </section>
            </main>

            <footer className="flex-shrink-0 p-4 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700">
              <form className="relative">
                  <input type="text" placeholder="Posez une question Ã  l'IA..." className="w-full pl-4 pr-12 py-2.5 border border-gray-300 dark:border-gray-600 rounded-full bg-gray-50 dark:bg-gray-700 text-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-shadow" />
                  <button type="submit" className="absolute right-1.5 top-1/2 -translate-y-1/2 p-2 rounded-full bg-purple-600 text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 dark:focus:ring-offset-gray-700 transition-colors">
                     <span className="sr-only">Envoyer</span>
                     <Send className="h-4 w-4" />
                  </button>
              </form>
            </footer>
          </motion.div>
        </>
      )}
    </AnimatePresence>
  );
};

export default AIAssistant;